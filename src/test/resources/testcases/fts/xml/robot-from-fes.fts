<?xml version="1.0" encoding="UTF-8"?>
<fts>
    <start>State_0</start>
    <states>
        <state id="State_2">
            <transition action="goAround" target="State_5" fexpression="(Robot &amp;&amp; !Mapping &amp;&amp; !Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; Camera)"></transition>
        </state>
        <state id="State_20"></state>
        <state id="State_10">
            <transition action="goAround" target="State_13" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; !Camera)"></transition>
        </state>
        <state id="State_3">
            <transition action="goAround" target="State_6" fexpression="(Robot &amp;&amp; !Mapping &amp;&amp; Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; !Camera)"></transition>
        </state>
        <state id="State_21"></state>
        <state id="State_4">
            <transition action="liDet" target="State_10" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; !Camera)"></transition>
            <transition action="caDet" target="State_7" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; !Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; Camera)"></transition>
            <transition action="move" target="State_8" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera))"></transition>
        </state>
        <state id="State_22"></state>
        <state id="State_11">
            <transition action="charge" target="State_21" fexpression="(Robot &amp;&amp; !Mapping &amp;&amp; !Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; Camera)"></transition>
        </state>
        <state id="State_5">
            <transition action="clean" target="State_11" fexpression="(Robot &amp;&amp; !Mapping &amp;&amp; !Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; Camera)"></transition>
        </state>
        <state id="State_23"></state>
        <state id="State_12">
            <transition action="charge" target="State_20" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera))"></transition>
        </state>
        <state id="State_0">
            <transition action="map" target="State_4" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera))"></transition>
            <transition action="caDet" target="State_2" fexpression="(Robot &amp;&amp; !Mapping &amp;&amp; !Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; Camera)"></transition>
            <transition action="move" target="State_1" fexpression="(Robot &amp;&amp; !Mapping &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera))"></transition>
            <transition action="liDet" target="State_3" fexpression="(Robot &amp;&amp; !Mapping &amp;&amp; Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; !Camera)"></transition>
        </state>
        <state id="State_1">
            <transition action="clean" target="State_9" fexpression="(Robot &amp;&amp; !Mapping &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera))"></transition>
        </state>
        <state id="State_6">
            <transition action="clean" target="State_15" fexpression="(Robot &amp;&amp; !Mapping &amp;&amp; Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; !Camera)"></transition>
        </state>
        <state id="State_7">
            <transition action="goAround" target="State_16" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; !Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; Camera)"></transition>
        </state>
        <state id="State_8">
            <transition action="clean" target="State_12" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera))"></transition>
        </state>
        <state id="State_9">
            <transition action="charge" target="State_14" fexpression="(Robot &amp;&amp; !Mapping &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera))"></transition>
        </state>
        <state id="State_17">
            <transition action="charge" target="State_22" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; !Camera)"></transition>
        </state>
        <state id="State_18">
            <transition action="charge" target="State_23" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; !Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; Camera)"></transition>
        </state>
        <state id="State_19"></state>
        <state id="State_13">
            <transition action="clean" target="State_17" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; !Camera)"></transition>
        </state>
        <state id="State_14"></state>
        <state id="State_15">
            <transition action="charge" target="State_19" fexpression="(Robot &amp;&amp; !Mapping &amp;&amp; Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; !Camera)"></transition>
        </state>
        <state id="State_16">
            <transition action="clean" target="State_18" fexpression="(Robot &amp;&amp; Mapping &amp;&amp; !Lidar &amp;&amp; Cleaning &amp;&amp; ObstacleDetection &amp;&amp; Camera)"></transition>
        </state>
    </states>
</fts>