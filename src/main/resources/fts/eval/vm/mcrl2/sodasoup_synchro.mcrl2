act
  insertSoup_Euro, insertSoup_Dollar,
  tomato, chicken, pea,
  pour_tomato, pour_chicken, pour_pea,
  no_cup_0, no_cup_1, no_cup_2, cup_present_0, cup_present_1, cup_present_2,
  take_soup,
  cancelSoup_0, cancelSoup_1, cancelSoup_2, cancelSoup_3,
  cancel_0, cancel_1, cancel_2, cancel_3,
  skipSoup_0, skipSoup_1, skipSoup_2, skipSoup_3,
  bad_luck, ringSoup,
  insert_Euro, insert_Dollar, take, 
  pay_Euro, pay_Dollar, free, change,
  cancelSoda_0, cancelSoda_1, cancelSoda_2, cancelSoda_3, return,
  serveTea, serveSoda, tea, soda,
  open, take_0, take_1, close
;

proc
  S1 = pay_Euro.S2 + pay_Dollar.S2 + free.S3;
  S2 = change.S3;
  S3 = cancelSoda_0.S4 + cancelSoda_1.S4 + cancelSoda_2.S4 + cancelSoda_3.S4 + tea.S6 + soda.S5;
  S4 = return.S10;
  S5 = serveSoda.S7;
  S6 = serveTea.S7;
  S7 = open.S8 + take_0.S10;
  S8 = take_1.S9;
  S9 = close.S10;
  S10 = delta; 
  SodaComponent = S1;

proc
  Soup_S0 = insertSoup_Euro.Soup_S1 + insertSoup_Dollar.Soup_S1;
  Soup_S1 = cancelSoup_0.Soup_S13 + tomato.Soup_S2 + chicken.Soup_S4 + pea.Soup_S6;
  Soup_S2 = no_cup_0.Soup_S3 + cup_present_0.Soup_S8 + skipSoup_0.Soup_S8;
  Soup_S3 = cancelSoup_1.Soup_S13;
  Soup_S4 = no_cup_1.Soup_S5 + cup_present_1.Soup_S9 + skipSoup_1.Soup_S9;
  Soup_S5 = cancelSoup_2.Soup_S13;
  Soup_S6 = no_cup_2.Soup_S7 + cup_present_2.Soup_S10 + skipSoup_2.Soup_S10;
  Soup_S7 = cancelSoup_3.Soup_S13;
  Soup_S8 = pour_tomato.Soup_S11;
  Soup_S9 = pour_chicken.Soup_S11;
  Soup_S10 = pour_pea.Soup_S11;
  Soup_S11 = ringSoup.Soup_S12 + skipSoup_3.Soup_S12;
  Soup_S12 = take_soup.Soup_S13 + bad_luck.Soup_S13;
  Soup_S13 = delta; 
  SoupComponent = Soup_S0;


% Final system with communication and filtering
VendingMachine = allow({
  cancel_0, cancel_1, cancel_2, cancel_3,
  tomato, chicken, pea,
  pour_tomato, pour_chicken, pour_pea,
  no_cup_0, no_cup_1, no_cup_2, cup_present_0, cup_present_1, cup_present_2,
  skipSoup_0, skipSoup_1, skipSoup_2, skipSoup_3,
  bad_luck, insert_Euro, insert_Dollar, take, ringSoup,
  free, change, return, soda, serveSoda, tea, serveTea,
  open, take_0, close
},
comm({
  insertSoup_Euro | pay_Euro -> insert_Euro,
  insertSoup_Dollar | pay_Dollar -> insert_Dollar,
  take_soup | take_1 -> take,
  cancelSoup_0 | cancelSoda_0 -> cancel_0,
  cancelSoup_1 | cancelSoda_1 -> cancel_1,
  cancelSoup_2 | cancelSoda_2 -> cancel_2,
  cancelSoup_3 | cancelSoda_3 -> cancel_3
},
SoupComponent || SodaComponent)
);

init VendingMachine;
