act
  insertBev_Euro, insertBev_Dollar, insertSoup_Euro, insertSoup_Dollar,
  sugar, no_sugar, pour_sugar_0, pour_sugar_1, pour_sugar_2,
  tomato, chicken, pea,
  coffee_0, coffee_1, teaBev_0, teaBev_1, cappuccino_0, cappuccino_1,
  pour_coffee_0, pour_coffee_1, pour_coffee_2, pour_tea, pour_milk_0, pour_milk_1,
  pour_tomato, pour_chicken, pour_pea,
  no_cup_0, no_cup_1, no_cup_2, cup_present_0, cup_present_1, cup_present_2,
  take_cup, take_soup,
  cancelBev_0, cancelBev_1, cancelBev_2, cancelBev_3, 
  cancelSoup_0, cancelSoup_1, cancelSoup_2, cancelSoup_3,
  cancel_0, cancel_1, cancel_2, cancel_3,
  skipBev_0, skipBev_1, skipBev_2, skipBev_3,
  skipSoup_0, skipSoup_1, skipSoup_2, skipSoup_3,
  skip_0, skip_1, skip_2, skip_3, 
  bad_luck, ringBev, ringSoup,
  insert_Euro, insert_Dollar, take, ring,
  pay_Euro, pay_Dollar, free, change,
  cancelSoda_0, cancelSoda_1, cancelSoda_2, cancelSoda_3, return,
  teaSoda_0, teaSoda_1, soda, pourBev_tea,
  serveTea, serveSoda, tea_0, tea_1,
  open, take_0, take_1, close
;

proc
  S1 = pay_Euro.S2 + pay_Dollar.S2 + free.S3;
  S2 = change.S3;
  S3 = cancelSoda_0.S4 + cancelSoda_1.S4 + cancelSoda_2.S4 +cancelSoda_3.S4 + teaSoda_0.S6 + teaSoda_1.S6 + soda.S5;
  S4 = return.S10;
  S5 = serveSoda.S7;
  S6 = serveTea.S7;
  S7 = open.S8 + take_0.S10;
  S8 = take_1.S9;
  S9 = close.S10;
  S10 = delta; 
  SodaComponent = S1;


proc
  Bev_S0 = insertBev_Euro.Bev_S1 + insertBev_Dollar.Bev_S1;
  Bev_S1 = cancelBev_0.Bev_S14 + cancelBev_1.Bev_S14 + cancelBev_2.Bev_S14 + cancelBev_3.Bev_S14 + sugar.Bev_S2 + no_sugar.Bev_S3;
  Bev_S2 = coffee_0.Bev_S6 + teaBev_0.Bev_S5 + cappuccino_0.Bev_S4;
  Bev_S3 = cappuccino_1.Bev_S9 + teaBev_1.Bev_S8 + coffee_1.Bev_S7;
  Bev_S4 = pour_sugar_2.Bev_S9;
  Bev_S5 = pour_sugar_1.Bev_S8;
  Bev_S6 = pour_sugar_0.Bev_S7;
  Bev_S7 = pour_coffee_1.Bev_S12;
  Bev_S8 = pourBev_tea.Bev_S12;
  Bev_S9 = pour_milk_0.Bev_S11 + pour_coffee_0.Bev_S10;
  Bev_S10 = pour_milk_1.Bev_S12;
  Bev_S11 = pour_coffee_2.Bev_S12;
  Bev_S12 = ringBev.Bev_S13 + skipBev_0.Bev_S13 + skipBev_1.Bev_S13 + skipBev_2.Bev_S13 + skipBev_3.Bev_S13;
  Bev_S13 = take_cup.Bev_S15;
  Bev_S14 = delta;
  Bev_S15 = delta; 
  BeverageComponent = Bev_S0;

proc
  Soup_S0 = insertSoup_Euro.Soup_S1 + insertSoup_Dollar.Soup_S1;
  Soup_S1 = cancelSoup_0.Soup_S13 + tomato.Soup_S2 + chicken.Soup_S4 + pea.Soup_S6;
  Soup_S2 = no_cup_0.Soup_S3 + cup_present_0.Soup_S8 + skipSoup_0.Soup_S8;
  Soup_S3 = cancelSoup_1.Soup_S13;
  Soup_S4 = no_cup_1.Soup_S5 + cup_present_1.Soup_S9 + skipSoup_1.Soup_S9;
  Soup_S5 = cancelSoup_2.Soup_S13;
  Soup_S6 = no_cup_2.Soup_S7 + cup_present_2.Soup_S10 + skipSoup_2.Soup_S10;
  Soup_S7 = cancelSoup_3.Soup_S13;
  Soup_S8 = pour_tomato.Soup_S11;
  Soup_S9 = pour_chicken.Soup_S11;
  Soup_S10 = pour_pea.Soup_S11;
  Soup_S11 = ringSoup.Soup_S12 + skipSoup_3.Soup_S12;
  Soup_S12 = take_soup.Soup_S13 + bad_luck.Soup_S13;
  Soup_S13 = delta; 
  SoupComponent = Soup_S0;


% Final system with communication and filtering
VendingMachine = allow({
  cancel_0, cancel_1, cancel_2, cancel_3,
  sugar, no_sugar, pour_sugar_0, pour_sugar_1, pour_sugar_2,
  tomato, chicken, pea,
  coffee_0, coffee_1, tea_0, tea_1, cappuccino_0, cappuccino_1,
  pour_coffee_0, pour_coffee_1, pour_coffee_2, pour_tea, pour_milk_0, pour_milk_1,
  pour_tomato, pour_chicken, pour_pea,
  no_cup_0, no_cup_1, no_cup_2, cup_present_0, cup_present_1, cup_present_2,
  skip_0, skip_1, skip_2, skip_3,
  bad_luck, insert_Euro, insert_Dollar, take, ring,
  free, change, return, soda, serveSoda, 
  open, take_0, close
},
comm({
  insertBev_Euro | insertSoup_Euro | pay_Euro -> insert_Euro,
  insertBev_Dollar | insertSoup_Dollar | pay_Dollar -> insert_Dollar,
  take_cup | take_soup | take_1 -> take,
  ringBev | ringSoup -> ring,
  pourBev_tea | serveTea -> pour_tea,
  teaBev_0 | teaSoda_0 -> tea_0,
  teaBev_1 | teaSoda_1 -> tea_1,
  cancelBev_0 | cancelSoup_0 | cancelSoda_0 -> cancel_0,
  cancelBev_1 | cancelSoup_1 | cancelSoda_1 -> cancel_1,
  cancelBev_2 | cancelSoup_2 | cancelSoda_2 -> cancel_2,
  cancelBev_3 | cancelSoup_3 | cancelSoda_3 -> cancel_3,
  skipBev_0 | skipSoup_0 -> skip_0,
  skipBev_1 | skipSoup_1 -> skip_1,
  skipBev_2 | skipSoup_2 -> skip_2,
  skipBev_3 | skipSoup_3 -> skip_3
},
BeverageComponent || SoupComponent || SodaComponent)
);

init VendingMachine;