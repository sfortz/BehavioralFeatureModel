digraph G {
rankdir=LR;
state0[ label = "State_0", style=filled, color=green ];
state1 [ label = "State_2" ];
state1 -> state2 [ label=" clean/(ObstacleDetection && !Mapping && Cleaning && (Lidar || Camera) && (!Lidar || !Camera) && Robot) " ];
state3 [ label = "State_20" ];
state3 -> state4 [ label=" charge/(ObstacleDetection && Mapping && !Lidar && Cleaning && Robot && Camera) " ];
state5 [ label = "State_3" ];
state5 -> state6 [ label=" goAround/(ObstacleDetection && !Mapping && !Lidar && Cleaning && Robot && Camera) " ];
state6 [ label = "State_10" ];
state6 -> state7 [ label=" clean/(ObstacleDetection && !Mapping && !Lidar && Cleaning && Robot && Camera) " ];
state8 [ label = "State_21" ];
state9 [ label = "State_4" ];
state9 -> state10 [ label=" caDet_0/(ObstacleDetection && Mapping && !Lidar && Cleaning && Robot && Camera) " ];
state9 -> state11 [ label=" liDet_0/(ObstacleDetection && Mapping && Lidar && Cleaning && Robot && !Camera) " ];
state9 -> state12 [ label=" move_0/(ObstacleDetection && Mapping && Cleaning && (Lidar || Camera) && (!Lidar || !Camera) && Robot) " ];
state13 [ label = "State_22" ];
state14 [ label = "State_11" ];
state14 -> state3 [ label=" clean/(ObstacleDetection && Mapping && !Lidar && Cleaning && Robot && Camera) " ];
state4 [ label = "State_23" ];
state12 [ label = "State_5" ];
state12 -> state15 [ label=" clean/(ObstacleDetection && Mapping && Cleaning && (Lidar || Camera) && (!Lidar || !Camera) && Robot) " ];
state16 [ label = "State_12" ];
state0 -> state1 [ label=" move_1/(ObstacleDetection && !Mapping && Cleaning && (Lidar || Camera) && (!Lidar || !Camera) && Robot) " ];
state0 -> state9 [ label=" map/(ObstacleDetection && Mapping && Cleaning && (Lidar || Camera) && (!Lidar || !Camera) && Robot) " ];
state0 -> state17 [ label=" liDet_1/(ObstacleDetection && !Mapping && Lidar && Cleaning && Robot && !Camera) " ];
state0 -> state5 [ label=" caDet_1/(ObstacleDetection && !Mapping && !Lidar && Cleaning && Robot && Camera) " ];
state17 [ label = "State_1" ];
state17 -> state18 [ label=" goAround/(ObstacleDetection && !Mapping && Lidar && Cleaning && Robot && !Camera) " ];
state11 [ label = "State_6" ];
state11 -> state19 [ label=" goAround/(ObstacleDetection && Mapping && Lidar && Cleaning && Robot && !Camera) " ];
state10 [ label = "State_7" ];
state10 -> state14 [ label=" goAround/(ObstacleDetection && Mapping && !Lidar && Cleaning && Robot && Camera) " ];
state2 [ label = "State_8" ];
state2 -> state16 [ label=" charge/(ObstacleDetection && !Mapping && Cleaning && (Lidar || Camera) && (!Lidar || !Camera) && Robot) " ];
state18 [ label = "State_9" ];
state18 -> state20 [ label=" clean/(ObstacleDetection && !Mapping && Lidar && Cleaning && Robot && !Camera) " ];
state21 [ label = "State_17" ];
state22 [ label = "State_18" ];
state22 -> state13 [ label=" charge/(ObstacleDetection && Mapping && Lidar && Cleaning && Robot && !Camera) " ];
state23 [ label = "State_19" ];
state15 [ label = "State_13" ];
state15 -> state21 [ label=" charge/(ObstacleDetection && Mapping && Cleaning && (Lidar || Camera) && (!Lidar || !Camera) && Robot) " ];
state7 [ label = "State_14" ];
state7 -> state23 [ label=" charge/(ObstacleDetection && !Mapping && !Lidar && Cleaning && Robot && Camera) " ];
state20 [ label = "State_15" ];
state20 -> state8 [ label=" charge/(ObstacleDetection && !Mapping && Lidar && Cleaning && Robot && !Camera) " ];
state19 [ label = "State_16" ];
state19 -> state22 [ label=" clean/(ObstacleDetection && Mapping && Lidar && Cleaning && Robot && !Camera) " ];
}
