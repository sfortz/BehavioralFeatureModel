<?xml version="1.0" encoding="UTF-8"?>
<fts>
    <start>State_0</start>
    <states>
        <state id="State_2">
            <transition action="clean" target="State_8" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera) &amp;&amp; !Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_20">
            <transition action="charge" target="State_23" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; !Lidar &amp;&amp; Camera &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_3">
            <transition action="goAround" target="State_10" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; !Lidar &amp;&amp; Camera &amp;&amp; !Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_10">
            <transition action="clean" target="State_14" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; !Lidar &amp;&amp; Camera &amp;&amp; !Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_21"></state>
        <state id="State_4">
            <transition action="caDet_0" target="State_7" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; !Lidar &amp;&amp; Camera &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
            <transition action="liDet_0" target="State_6" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; Lidar &amp;&amp; !Camera &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
            <transition action="move_0" target="State_5" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera) &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_22"></state>
        <state id="State_11">
            <transition action="clean" target="State_20" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; !Lidar &amp;&amp; Camera &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_23"></state>
        <state id="State_5">
            <transition action="clean" target="State_13" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera) &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_12"></state>
        <state id="State_0">
            <transition action="move_1" target="State_2" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera) &amp;&amp; !Mapping &amp;&amp; Cleaning)"></transition>
            <transition action="map" target="State_4" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera) &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
            <transition action="liDet_1" target="State_1" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; Lidar &amp;&amp; !Camera &amp;&amp; !Mapping &amp;&amp; Cleaning)"></transition>
            <transition action="caDet_1" target="State_3" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; !Lidar &amp;&amp; Camera &amp;&amp; !Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_1">
            <transition action="goAround" target="State_9" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; Lidar &amp;&amp; !Camera &amp;&amp; !Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_6">
            <transition action="goAround" target="State_16" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; Lidar &amp;&amp; !Camera &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_7">
            <transition action="goAround" target="State_11" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; !Lidar &amp;&amp; Camera &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_8">
            <transition action="charge" target="State_12" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera) &amp;&amp; !Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_9">
            <transition action="clean" target="State_15" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; Lidar &amp;&amp; !Camera &amp;&amp; !Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_17"></state>
        <state id="State_18">
            <transition action="charge" target="State_22" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; Lidar &amp;&amp; !Camera &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_19"></state>
        <state id="State_13">
            <transition action="charge" target="State_17" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; (Lidar || Camera) &amp;&amp; (!Lidar || !Camera) &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_14">
            <transition action="charge" target="State_19" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; !Lidar &amp;&amp; Camera &amp;&amp; !Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_15">
            <transition action="charge" target="State_21" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; Lidar &amp;&amp; !Camera &amp;&amp; !Mapping &amp;&amp; Cleaning)"></transition>
        </state>
        <state id="State_16">
            <transition action="clean" target="State_18" fexpression="(ObstacleDetection &amp;&amp; Robot &amp;&amp; Lidar &amp;&amp; !Camera &amp;&amp; Mapping &amp;&amp; Cleaning)"></transition>
        </state>
    </states>
</fts>